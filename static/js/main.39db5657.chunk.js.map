{"version":3,"sources":["config.ts","utils/history.ts","constants/routes.ts","components/PrivateRouter.tsx","utils/http.ts","services/survey.ts","components/customSurvey/index.tsx","components/customSurvey/customSurvey.tsx","components/surveyBuilder/components/types/SelectBuilder.tsx","components/surveyBuilder/components/types/TextAreaBuilder.tsx","components/surveyBuilder/components/types/MultipleChoiceBuilder.tsx","components/surveyBuilder/components/QuestionDetail.tsx","components/surveyBuilder/components/Question.tsx","components/surveyBuilder/components/SurveyQuestions.tsx","components/surveyBuilder/components/SurveyBuilderWrapper.tsx","components/surveyBuilder/index.tsx","components/surveyBuilder/SurveyBuilder.tsx","components/Router.tsx","components/constants/navbar/NavBar.tsx","components/constants/navbar/index.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","env","process","basename","REACT_APP_BASE_NAME","baseURI","REACT_APP_API_BASE_URI","routes","form","createBrowserHistory","BUILDER","PrivateRouter","props","useContext","UserContext","isHighLevelUser","to","http","axios","create","baseURL","headers","fetchSurveyQuestions","id","a","get","data","CustomSurvey","useState","isLoading","setIsLoading","surveyQuestion","setSurveyQuestion","useEffect","surveyJson","console","error","json","onComplete","SelectBuilder","TextAreaBuilder","disabled","MultipleChoiceBuilder","QuestionDetail","question","type","Question","handleQuestionRemove","qIndex","questionType","setQuestionType","className","defaultValue","placeholder","onChange","e","target","value","onClick","preventDefault","SurveyQuestions","questions","onQuestionChange","questionsState","setQuestionsState","questionIndex","setquestionIndex","defaultQuestion","label","isRequired","current","index","indexOf","splice","map","push","SurveyBuilderWrapper","initialValues","isSubmitting","setFieldValue","onValueChange","name","title","startDate","endDate","handleSubmit","SurveyBuilder","onSubmit","values","setSubmitting","setTimeout","log","JSON","stringify","formikProps","Router","history","exact","path","component","NavBarComponent","user","toggleUserType","NavBar","Consumer","React","createContext","App","setUser","localStorage","getItem","Provider","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39db5657.chunk.js","sourcesContent":["/**\n * Application wide configuration.\n */\nconst config = {\n    env: process.env.NODE_ENV,\n    basename: process.env.REACT_APP_BASE_NAME || '/',\n    baseURI: process.env.REACT_APP_API_BASE_URI,\n    routes: {\n        form: 'form/',\n    }\n};\n\nexport default config;\n","import { createBrowserHistory } from 'history';\n\nimport config from '../config';\n\nexport default createBrowserHistory({ basename: config.basename });\n","export const HOME = '/';\n\nexport const BUILDER = '/builder';\n","import {useContext} from 'react';\nimport { Route, Redirect } from \"react-router\";\n\nimport * as routes from 'constants/routes';\n\nimport { UserContext, IUser } from './App';\n\nconst PrivateRouter = (props: any) => {\n    const user = useContext(UserContext);\n\n    return (\n        user.isHighLevelUser ? <Route {...props} /> : <Redirect to={routes.HOME} {...props}/>\n    )\n};\n\nexport default PrivateRouter;\n","import axios from 'axios';\n\nimport config from '../config';\n\n/**\n * Http Utility as axios wrapper.\n */\nconst http = axios.create({\n    baseURL: config.baseURI,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\nexport default http;\n","import http from '../utils/http';\n\nimport config from '../config';\n\nexport const fetchSurveyQuestions = async (id: number): Promise<any> => {\n    const { data } = await http.get(config.routes.form + id)\n\n    return data;\n}\n","import CustomSurvey from './customSurvey';\n\nexport default CustomSurvey;","import React, {useEffect, useState} from 'react';\nimport { Survey } from 'survey-react';\n\nimport { fetchSurveyQuestions } from 'services/survey';\n\nconst CustomSurvey = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [surveyQuestion, setSurveyQuestion] = useState({});\n\n    useEffect(() => {\n        setIsLoading(true);\n        (async function() {\n            try {\n                const surveyJson:any = await fetchSurveyQuestions(1);\n                setSurveyQuestion(surveyJson);\n            } catch (e) {\n                console.error(e);\n            }finally {\n                setIsLoading(false);\n            }\n        })();\n    }, []);\n\n\n    const complete = (data: any) => {\n        return;\n        // console.log(data);\n        // console.log(data.data);\n    }\n\n    return (\n        <>\n            {isLoading ? (<div>Loading...</div>):<Survey json={surveyQuestion} onComplete={complete} /> }\n            {/* <Survey json={surveyQuestion} onComplete={complete} /> */}\n            \n            Das ist Survey\n        </>\n    )\n};\n\nexport default CustomSurvey;","const SelectBuilder = () => {\n    return (\n        <>\n            Selection Section will be here\n        </>\n    )\n}\n\nexport default SelectBuilder;\n","const TextAreaBuilder = () => {\n    return (\n        <textarea disabled={true}>User will input the value here</textarea>\n    )\n}\n\nexport default TextAreaBuilder;\n","const MultipleChoiceBuilder = () => {\n    return (\n        <>\n            Multiple Choice options here\n        </>\n    )\n}\n\nexport default MultipleChoiceBuilder;\n","import SelectBuilder from './types/SelectBuilder';\nimport TextAreaBuilder from './types/TextAreaBuilder';\nimport MultipleChoiceBuilder from './types/MultipleChoiceBuilder';\n\nconst QuestionDetail = (props: any) => {\n    const { question } = props;\n    return (<>\n        {question.type === 'text' && <TextAreaBuilder />}\n        {question.type === 'select' && <SelectBuilder />}\n        {question.type === 'multipleChoice' && <MultipleChoiceBuilder />}\n    </>)\n}\n\nexport default QuestionDetail;\n","import { MouseEvent, useState } from 'react';\nimport QuestionDetail from './QuestionDetail';\n\nconst Question = (props: any) => {\n    const { question, handleQuestionRemove, qIndex } = props;\n    const [questionType, setQuestionType] = useState(question.type || 'text');\n\n    return (\n        <div className=\"form-builder__question\">\n            <div className=\"form-builder__question--core\">\n                {qIndex+1}. <br/>Question :<br/>\n                <input className=\"input-text input-text--full-width\" defaultValue={question.question} placeholder=\"Enter your question here\" onChange={(e) => question.question = e.target.value} />\n                <br />\n                Type:<br/>\n                <select defaultValue={questionType} onChange={(e) => {\n                    setQuestionType(e.target.value);\n                    question.type = e.target.value;\n                }}>\n                    <option value=\"text\">Text</option>\n                    <option value=\"select\">Select</option>\n                    <option value=\"multipleChoice\">Multiple Choice</option>\n\n                </select>\n                <br />\n                <br/>\n                <QuestionDetail question={question} />\n                <br />\n            </div>\n            <div className=\"form-builder__question--delete\" onClick={(e: MouseEvent<HTMLElement>) => {\n                e.preventDefault();\n                handleQuestionRemove(question)\n            }\n            }>Delete</div>\n        </div>\n    )\n}\n\nexport default Question;\n","import { MouseEvent, useState } from 'react';\nimport Question from './Question';\n\nconst SurveyQuestions = (props: any) => {\n    const { questions, onQuestionChange } = props;\n    const [questionsState,setQuestionsState] = useState(questions||[]);\n    const [questionIndex, setquestionIndex] = useState(0);\n\n    const defaultQuestion = {\n        question: '',\n        label: '',\n        type: 'text',\n        data: {},\n        isRequired: false,\n    }\n\n    const generateDefaultQuestion = () => {\n        return {id: questionIndex, ...defaultQuestion};\n    }\n\n    const handleQuestionAdd = (e: MouseEvent<HTMLElement>) => {\n        e.preventDefault();\n        const current = [...questionsState];\n        setquestionIndex(questionIndex+1);\n        current.push(generateDefaultQuestion());\n        onQuestionChange(current);\n        setQuestionsState(current);\n    }\n\n    const handleQuestionRemove = (value: number) => {\n        const current = [...questionsState];\n        const index = current.indexOf(value);\n        current.splice(index, 1);\n        onQuestionChange(current);\n        setQuestionsState(current);\n    }\n\n    return (\n        <>\n            {questionsState.map((question: Object, index:Number) => {\n                return <Question question={question} key={index} handleQuestionRemove={handleQuestionRemove} qIndex={index}/>\n            })}\n            <button onClick={handleQuestionAdd} >Add Question</button>\n        </>\n    )\n}\n\nexport default SurveyQuestions;\n","import SurveyQuestions from './SurveyQuestions';\n\nconst SurveyBuilderWrapper = (props: any) => {\n    const {\n        initialValues,\n        isSubmitting,\n        setFieldValue,\n    } = props;\n\n    const onValueChange = (index: string, value: any) => {\n        setFieldValue(index, value)\n    }\n\n    const onQuestionChange = (question:Array<any>) => {\n        setFieldValue('questions', question)\n    }\n\n    return (<>\n        <div className=\"ok\">\n            Title<br/>\n            <input className=\"input-text\" type=\"text\" name=\"title\" placeholder=\"Enter your title here\" defaultValue={initialValues.title} onChange={(e) => onValueChange('title', e.target.value)} />\n        </div>\n        <div>\n            Start Date<br/>\n            <input type=\"date\" name=\"startDate\" placeholder={initialValues.startDate} defaultValue={initialValues.startDate} onChange={(e) => onValueChange('startDate', e.target.value)} />\n        </div>\n        <div>\n            End Date<br/>\n            <input type=\"date\" name=\"endDate\" placeholder={initialValues.endDate} defaultValue={initialValues.endDate} onChange={(e) => onValueChange('endDate', e.target.value)} />\n        </div>\n        <SurveyQuestions questions={initialValues.questions} onQuestionChange={onQuestionChange} />\n        <br/>\n        <br/>\n        <br/>\n        <button className=\"form-builder__question--submit\" type=\"submit\" disabled={isSubmitting} onClick={props.handleSubmit}>Submit</button>\n\n        {/* <button type=\"submit\" disabled={isSubmitting} onClick={props.handleSubmit}>Submit</button> */}\n    </>)\n}\n\nexport default SurveyBuilderWrapper;","import SurveyBuilder from './SurveyBuilder';\n\nexport default SurveyBuilder;","import { Formik } from 'formik';\n\nimport SurveyBuilderWrapper from \"./components/SurveyBuilderWrapper\";\n\nconst SurveyBuilder = () => {\n    return (\n        <div className=\"form-builder\">\n            <div className=\"form-builder__header\">\n                Start building your own form\n            </div>\n            <Formik\n                initialValues={{\n                    title: '',\n                    startDate: '',\n                    endDate: '',\n                    questions: [],\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n                        console.log(JSON.stringify(values, null, 2));\n                        setSubmitting(false);\n                    }, 400);\n                }}\n            >\n                {(formikProps) => {\n                    return (\n                        <form >\n                            <SurveyBuilderWrapper {...formikProps} />\n                        </form>\n                    )\n                }}\n            </Formik>\n        </div>)\n};\n\nexport default SurveyBuilder;\n","import React from 'react';\nimport { Router as BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport history from 'utils/history';\nimport * as routes from 'constants/routes';\n\nimport PrivateRouter from './PrivateRouter';\nimport CustomSurvey from 'components/customSurvey';\nimport SurveyBuilder from 'components/surveyBuilder';\n\n// Top level application router.\nconst Router = () => (\n  <BrowserRouter history={history}>\n    <Switch>\n      <PrivateRouter exact path={routes.BUILDER} component={SurveyBuilder} />\n      <Route path={routes.HOME} component={CustomSurvey} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import history from \"utils/history\";\nimport * as routes from 'constants/routes';\n\nimport { UserContext } from 'components/App';\n\nconst NavBar = (props: any) => {\n    return (<UserContext.Consumer>\n        {user => {\n            return <NavBarComponent user={user} {...props} />\n        }}\n    </UserContext.Consumer>)\n}\n\nconst NavBarComponent = (props: any) => {\n    const { user, toggleUserType } = props;\n\n    return (\n        <div className=\"navbar\">\n            <div className=\"navbar__core\">\n                <span className=\"navbar__core--item\" onClick={() => history.push(routes.HOME)}>Forms</span>\n                {user.isHighLevelUser && (\n                    <span className=\"navbar__core--item\" onClick={() => history.push(routes.BUILDER)}>Builder</span>\n                )}\n            </div>\n            <div className=\"navbar__utils\" onClick={toggleUserType}>\n                {user.isHighLevelUser ? <>Switch to Low Level User</> : <>Switch to High Level User</>}\n            </div>\n        </div>\n    );\n}\n\nexport default NavBar;","import NavBar from './NavBar';\n\nexport default NavBar;","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport Router from './Router';\n\nimport NavBar from './constants/navbar'\n\nexport const UserContext = React.createContext<IUser>({ isHighLevelUser: false });\n\nexport interface IUser {\n  isHighLevelUser: boolean;\n}\n\nfunction App() {\n\n  const [user, setUser] = useState<IUser>({ isHighLevelUser: false });\n\n  useEffect(() => {\n    const localValue = localStorage.getItem('isHighLevelUser');\n    if (localValue === 'true') {\n      setUser({ isHighLevelUser: true });\n      return;\n    }\n    setUser({ isHighLevelUser: false });\n  }, [])\n\n  const toggleUserType = () => {\n    if (!user.isHighLevelUser) {\n      setUser({ isHighLevelUser: true });\n      localStorage.setItem('isHighLevelUser', 'true');\n      return;\n    }\n    setUser({ isHighLevelUser: false });\n    localStorage.setItem('isHighLevelUser', 'false');\n  }\n\n  return (\n    <UserContext.Provider value={user}>\n      <NavBar toggleUserType={toggleUserType} />\n      <div className=\"app\">\n        <Router />\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './public';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}